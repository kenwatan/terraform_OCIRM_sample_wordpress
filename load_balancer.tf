## This configuration was generated by terraform-provider-oci

resource oci_load_balancer_load_balancer export_LB1 {
  depends_on = [null_resource.remote-exec]
  compartment_id = var.compartment_ocid
  display_name = "LB1"
  ip_mode    = "IPV4"
  is_private = "false"
  reserved_ips {
    id = oci_core_public_ip.export_lb01.id
  }
  network_security_group_ids = [
    oci_core_network_security_group.export_Network-Security-Group-for-AP.id,
  ]
  shape = "100Mbps"
  subnet_ids = [
    oci_core_subnet.export_PublicSubnet.id,
  ]
}
resource oci_load_balancer_backend_set export_BS1 {
  health_checker {
    interval_ms         = "10000"
    port                = "80"
    protocol            = "HTTP"
    response_body_regex = ""
    retries             = "3"
    return_code         = "200"
    timeout_in_millis   = "3000"
    url_path            = "/"
  }
  load_balancer_id = oci_load_balancer_load_balancer.export_LB1.id
  name             = "BS1"
  policy           = "ROUND_ROBIN"
}
resource oci_load_balancer_backend export_10-0-0-101-80 {
  backendset_name  = oci_load_balancer_backend_set.export_BS1.name
  backup           = "false"
  drain            = "false"
  ip_address       = var.ap1_ip_address
  load_balancer_id = oci_load_balancer_load_balancer.export_LB1.id
  offline          = "false"
  port             = "80"
  weight           = "1"
}
resource oci_load_balancer_listener export_LB1_LSNR1 {
  connection_configuration {
    backend_tcp_proxy_protocol_version = "0"
    idle_timeout_in_seconds            = "60"
  }
  default_backend_set_name = oci_load_balancer_backend_set.export_BS1.name
  hostname_names = [
  ]
  load_balancer_id = oci_load_balancer_load_balancer.export_LB1.id
  name             = "LSNR1"
  #path_route_set_name = <<Optional value not found in discovery>>
  port     = "80"
  protocol = "HTTP"
  rule_set_names = [
  ]
}
